#pragma checksum "C:\Sheridan\Semester6\Capstone Project\AuthSys (2)\AuthSys (2)\AuthSys\AuthSys\AuthSys\Views\Home\CnlaInnersExterior.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4603688947c4534f616d66187e37b1e48f778ce1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_CnlaInnersExterior), @"mvc.1.0.view", @"/Views/Home/CnlaInnersExterior.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Sheridan\Semester6\Capstone Project\AuthSys (2)\AuthSys (2)\AuthSys\AuthSys\AuthSys\Views\_ViewImports.cshtml"
using AuthSys;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Sheridan\Semester6\Capstone Project\AuthSys (2)\AuthSys (2)\AuthSys\AuthSys\AuthSys\Views\_ViewImports.cshtml"
using AuthSys.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4603688947c4534f616d66187e37b1e48f778ce1", @"/Views/Home/CnlaInnersExterior.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e179435660e193f1730521d446bcce900eebc5ea", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Home_CnlaInnersExterior : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<p>
    <br />
    <h1>Introduction</h1>
    <br /><br />
    The purpose of this training manual is to cover the technical aspects of exterior landscaping from the
    perspective of management. We realize that managers cannot be technical experts in all areas of the
    operation, but they must have a general understanding of the aspects of technical issues that impact
    their ability to manage. A more detailed coverage of the technical knowledge needed by landscape
    contractors is covered in the following publications (available in both English and Spanish):
</p>
<br />
<ul>
    <li>Landscape Training Manual for Irrigation Technicians</li>
    <li>Landscape Training Manual for Maintenance Technicians</li>
    <li>Landscape Training Manual for Installation Technicians</li>
</ul>
<br />

<p>
    <h2>Chapter	1</h2><br /><br />
    <h3>Interpret	and	Implement	Landscape	Plans</h3><br /><br />
    <h5> Landscape	Specifications </h5><br /><br />
    </p>
<p>
    During	the	course	of	a");
            WriteLiteral(@"	manager’s	day-to-day	work,	it	is	clear	that	landscape	specifications	need	to	be
    dealt	with,	both	to	develop	a	bid	for	a	project	and	to	provide	landscaping	crews	with	a	road	map	to
    follow	when	completing	the	project	itself.	To	ensure	that	the	company	will	be	successful	and	profitable,
    it	is	critical	to	be	able	to	accurately	read	and	understand	specifications.
    Landscape	specifications	refer	to	both	the	drawings	and	written	specifications that	accompany
    landscape	contracts.	Large	companies	normally	have	estimators	whose	job	it	is	to	understand	the
    specifications,	to	be	able	to	do	quantity	takeoffs	from	drawings,	and	to	develop	a	cost	to	carry	out	the
    project	on	the	basis	of	the	specifications	and	drawings.	Although	the	larger	companies	have	estimators,
    the	manager/owner	needs	to	have	a	good	understanding	of	specifications	to	enable	him	or	her	to
    review	the	work	carried	out	by	the	estimator.	In	smaller	companies,	it	is	very	often	the	owner/manager
    who	prepares	th");
            WriteLiteral(@"e	bids;	thus,	in	these	instances,	it	is	essential	that	the	owner/manager	have	a	clear
    understanding	of	the	drawings	and	specifications	in	order	to	bid	properly.
    The	goal	in	using	landscape	specifications	is	pretty	straightforward.	In	Canada,	large	dollar	tenders	will
    often	be	drafted	according	to	CCDC	standards	(Canadian	Construction	Documents	Committee,
    www.ccdc.org/home.html).	In	the	United	States,	standardized	contracts	are	available	from	the
    Association	of	General	Contractors	of	America,	and	contract	information	is	also	available	from	the
    National	Institute	of	Building	Sciences.	These	can	be	very	complex	documents	that	require	a	great	deal
    of	expertise	to	understand	and	to	comply	with	the	terms	and conditions	they	contain.
    We	will	concentrate	our	discussion	on	smaller	scale	projects,	which	will	not	be	as	complex,	but	which
    will	still	require	an	understanding	of	the	basic	components	and	concepts	of	specifications.	To	start,	let	us
    look	at	a	more	detailed	di");
            WriteLiteral(@"fference	between	drawings	and	written	specifications.	The	first	thing	to
    understand	is	that,	when	there	is	a	legal	problem,	written	specifications	take	precedence	over	drawings
    in	the	eyes	of	the	court.	Therefore,	the	written	specifications	cannot be	ignored	just	because	“they	are
    too	complicated,”	nor	should	they	be	viewed	as	“guides”	to	the	work	being	performed.
    Drawings	are	a	visual	representation	of	the	shapes,	location,	dimensions,	and	measurements	of	the
    work	to	be	done	on	a	particular	project.	Specifications	are	a	more	precise,	formal,	and	detailed
    description	of	the	work	to	be	done.	They	generally	include	the	way	the	work	is	to	be	done	and	include
    procedures,	the	materials	to	be	used,	and	the	quality	required.	Experience	will	show	that	a	combination
    of	good	drawings	and	good	specifications	makes	the	job	much	easier	to	bid	accurately	and	complete
    successfully.
</p>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
